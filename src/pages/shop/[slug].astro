---
import "../../style.css";
import Button from "../../components/Button.astro";
import MainLayout from "../../components/MainLayout.astro";

export async function getStaticPaths() {
  const url =
    "https://klsobzjqbscpapozhswb.supabase.co/rest/v1/Product?apikey=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtsc29iempxYnNjcGFwb3poc3diIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODUzNDE5ODIsImV4cCI6MjAwMDkxNzk4Mn0.elYt1kZI8qijTDQryIWku28K5ky5WiMSnBdACGiLiK0";

  const options = {
    headers: {
      apikey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtsc29iempxYnNjcGFwb3poc3diIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODUzNDE5ODIsImV4cCI6MjAwMDkxNzk4Mn0.elYt1kZI8qijTDQryIWku28K5ky5WiMSnBdACGiLiK0",
    },
  };

  const response = await fetch(url, options);
  const data = await response.json();

  return data.map((product) => ({
    params: { slug: product.id },
    props: { product },
  }));
}

const { product } = Astro.props;
---

<MainLayout>
  <section class="product-overview">
    <div class="wrapper">
      <div class="carousel images">
        <img class="event-img" id="sourceImage" src={`/img/${product.product_img_1}`} alt="" draggable="false" />
        <img class="event-img" src={`/img/${product.product_img_2}`} alt="" draggable="false" />
        <img class="event-img" src={`/img/${product.product_img_3}`} alt="" draggable="false" />
      </div>
    </div>

    <div class="purchase main-container">
      <div class="pname_artist">
        <h2 id="sourceElement">{product.product_name}</h2>
        <p>by {product.product_artist}</p>
      </div>
      <div class="materials">
        <h4>Materials</h4>
        <p>{product.product_materials}</p>
      </div>
      <div class="dimensions">
        <h4>Size</h4>
        <p>{product.product_dimensions}</p>
      </div>
      <div class="weight">
        <h4>Weight</h4>
        <p>{product.product_weight}</p>
      </div>
      <p id="price">{product.product_price},00 DKK</p>
      <Button id="add-to cart" size="fit-content" color="blue" popupClass="btn">Add to cart</Button>
    </div>
    <div class="description main-container">
      <h4>Description</h4>
      <p>{product.product_description}</p>
    </div>
  </section>
</MainLayout>

<style>
  .main-container {
    margin-top: var(--s-spacing) !important;
  }
  .blur-background img {
    filter: blur(4px);
  }
  .wrapper .carousel {
    white-space: nowrap;
    cursor: pointer;
    font-size: 0px;
    overflow: hidden;
  }
  .carousel img {
    margin-left: 14px;
  }
  .carousel img:first-child {
    margin-left: 0px;
  }

  .wrapper {
    max-width: 1200px;
  }
  .images {
    display: flex;
  }

  .carousel.dragging {
    cursor: grab;
    scroll-behavior: auto;
  }
  .carousel.dragging img {
    pointer-events: none;
  }

  .pname_artist {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--xxs-spacing);
    align-items: flex-end;
    margin-bottom: var(--xs-spacing);
  }

  .materials p,
  .weight p,
  .dimensions p {
    text-transform: uppercase;
  }

  h4 {
    color: var(--blue);
  }

  .materials,
  .weight,
  .dimensions {
    margin-bottom: var(--s-spacing);
  }

  #price {
    display: flex;
    justify-content: flex-end;
  }

  .description {
    margin-top: var(--m-spacing);
  }
  .description h2 {
    color: var(--blue);
  }

  .description h4 {
    margin-bottom: var(--xs-spacing);
  }

  @media (min-width: 900px) {
    .wrapper {
      max-width: calc(30vw * 0.75);
      grid-column: 2/3;
      margin: auto;
      margin-top: var(--m-spacing);
    }

    .wrapper .carousel {
      overflow: visible;
    }
    .carousel {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--m-spacing);
      margin-top: var(--xl-spacing);
    }
    .carousel img {
      margin-left: 0;
    }
    .product-overview {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
    }

    .purchase {
      grid-column: 1/2;
      grid-row: 1/2;
      position: sticky;
      top: 13rem;
      height: calc(100vh - 61px);
      max-width: 350px;
    }

    .description {
      max-width: 400px;
      position: sticky;
      top: 13rem;
      height: calc(100vh - 61px);
      z-index: -2;
    }
  }
</style>

<script>
  const carousel = document.querySelector(".carousel");
  let firstImg = carousel.querySelectorAll("img")[0];

  let isDragStart = false,
    prevPageX,
    prevScrollLeft,
    positionDiff;

  const dragStart = (e) => {
    isDragStart = true;
    prevPageX = e.pageX || e.touches[0].pageX;
    prevScrollLeft = carousel.scrollLeft;
  };

  const dragging = (e) => {
    if (!isDragStart) return;
    e.preventDefault();
    carousel.classList.add("dragging");
    positionDiff = (e.pageX || e.touches[0].pageX) - prevPageX;
    carousel.scrollLeft = prevScrollLeft - positionDiff;
  };

  const dragStop = () => {
    isDragStart = false;
    carousel.classList.remove("dragging");
  };
  carousel.addEventListener("touchstart", dragStart);
  carousel.addEventListener("touchmove", dragging);
  carousel.addEventListener("mouseup", dragStop);
  carousel.addEventListener("touchend", dragStop);
</script>
